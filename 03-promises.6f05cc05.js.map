{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,WAGA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,aAAcF,SAASC,cAAc,kBACrCE,cAAeH,SAASC,cAAc,mBACtCG,cAAeJ,SAASC,cAAc,iBACtCI,UAAWL,SAASC,cAAc,WAkBpC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACT,GAAIH,EAAe,CACjB,MAAMI,EAAU,uBAAqBT,QAAiBC,MACtDS,EAAArB,GAASsB,OAAOC,QAAQH,GACxBN,EAAQ,C,SAAEH,E,MAAUC,G,KACf,CACL,MAAMQ,EAAU,sBAAoBT,QAAiBC,MACrDS,EAAArB,GAASsB,OAAOE,QAAQJ,GACxBL,EAAO,C,SAAEJ,E,MAAUC,G,IAEpBA,EAAM,G,CA5BbV,EAAKC,OAAOsB,iBAAiB,UAAUC,IACrCA,EAAMC,iBAEN,MAAMf,EAAQgB,SAAS1B,EAAKI,aAAauB,OACzC3B,EAAKI,aAAauB,MAAQjB,EAC1B,MAAMkB,EAASF,SAAS1B,EAAKK,cAAcsB,OACrCE,EAAOH,SAAS1B,EAAKM,cAAcqB,OAEzC,IAAIG,EAAepB,EACnB,IAAK,IAAIqB,EAAI,EAAGA,GAAKH,EAAQG,IAC3Bd,YAAW,IAAMT,EAAcuB,EAAGD,IAAeA,GACjDA,GAAgBD,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  inputElDelay: document.querySelector('[name=\"delay\"]'),\n  inputElAmount: document.querySelector('[name=\"amount\"]'),\n  inputElNumber: document.querySelector('[name=\"step\"]'),\n  btnSubmit: document.querySelector('button'),\n};\n\nrefs.formEl.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const delay = parseInt(refs.inputElDelay.value);\n  refs.inputElDelay.value = delay;\n  const amount = parseInt(refs.inputElAmount.value);\n  const step = parseInt(refs.inputElNumber.value);\n\n  let currentDelay = delay;\n  for (let i = 1; i <= amount; i++) {\n    setTimeout(() => createPromise(i, currentDelay), currentDelay);\n    currentDelay += step;\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        const message = `✅ Fulfilled promise ${position} in ${delay}ms`;\n        Notiflix.Notify.success(message);\n        resolve({ position, delay });\n      } else {\n        const message = `❌ Rejected promise ${position} in ${delay}ms`;\n        Notiflix.Notify.failure(message);\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\n\n// refs.formEl.addEventListener('submit', event => {\n//   event.preventDefault();\n\n//   const delay = parseInt(refs.inputElDelay.value);\n//   refs.inputElDelay.value = delay;\n//   const amount = parseInt(refs.inputElAmount.value);\n//   const step = parseInt(refs.inputElNumber.value);\n\n//   const promises = Array.from({ length: amount }, (_, i) => createPromise(i + 1, delay + i * step));\n\n//   Promise.all(promises)\n//     .then(results => {\n//       results.forEach(({ position, delay }) => {\n//         Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       });\n//     })\n//     .catch(results => {\n//       results.forEach(({ position, delay }) => {\n//         Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//       });\n//     });\n// });\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","inputElDelay","inputElAmount","inputElNumber","btnSubmit","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","message","$parcel$interopDefault","Notify","success","failure","addEventListener","event","preventDefault","parseInt","value","amount","step","currentDelay","i"],"version":3,"file":"03-promises.6f05cc05.js.map"}